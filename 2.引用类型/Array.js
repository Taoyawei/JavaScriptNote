/*
数组我们无论在那个语言里都有的东西，但是在了解它属性方法之前，我想比较一下JavaScript
中的数组和Java中的不同：
	Java中的我们不论，在JavaScript中我感觉次数组非彼数组，有Java基础的可以感觉到
	这里的数组更像Java里面的数组与集合的结合体，下面我们看看特性：
		a:可以无序
		b:可以存任何数据类型
		c:同一个数组可以各种类型混杂

下面我们进入数组学习：
	1.length：这是我们都很熟的属性，就是表示数组长度，这个属性算是老朋友了
	2.检测数组：isArray,instanceof在一个全局环境中可以胜任，但是如果页面中有框架
				那么instanceof就不行了，此时数组类型的检测就得靠isArray()方法
*/
/*
在这里我们了解四个数组方法，四个配合应用可以有着很神奇的效果，模拟出栈，队列的效果
	1.push():在数组最后面添加一个数组项
	2.pop():删除数组的最后一项
	3.shift():删除数组的第一项
	4.unshift():在数组最前面添加一项
*/
var arr = [1,2,3,4];
arr.push(5);
arr.pop();
arr.shift();
arr.unshift(6);

/*
有数组就会有顺序问题，这个在数组里面是不可避免的问题，Javascript提供了两个方法
		reverse():倒序，将数组转个180度，没什么好讲的
		sort():这个是排序方法，但是有一个小毛病，那就是它总是按字符串大小来排的
				所以用它得要有一个函数作为其参数，那个函数如下：
*/
function conpare(value1,value2){
	if(value1<value2){
		return 1;
	}else if(value>value2){
		return -1;
	}else{
		return 0;
	}
}

/*
我们继续来看数组的操作方法，有三个方法很重要：
		concat():在这个方法没有参数情况下，就是直接复制调用它的数组，并返回结果数组，
				如果有参数，也是数组，那么它就是将这个数组添加到自己复制的结果数组中
				如果参数不是数组，那么就自动变成数组形式加入结果数组
				
		slice():这是数组截取方法，如果只有一个参数，那么就截取从这个位置开始后面
				所有的数组。如果两个参数，那么就是截取的开始和结束位置，记住：包前
				不包后

		splice():这是一个神奇的方法，根据参数的不同可以完成，删除，插入，替换
					前两个参数是固定的作用，第一个是数组中的位置，第二个是要删除
					的项数，第三个到后面n个都是插入这个数组的项。所以能完成删除，
					插入，替换
*/

/*
位置方法有两个：indexOf():获取第一个符合的参数位置
				lastIndexOf():获取复合条件的最后一位的位置
*/

/*
迭代：顾名思义，迭代就是对数组中的每一项都进行操作，有五个方法：
	every():给数组中的每一项绑定函数，如果都返回ture，那么返回true
	filter():给每一项都绑定函数，返回返回true的项，组成数组
	forEach():给每一项绑定函数，没有返回
	map():给每一项绑定函数，并把每一项运行的结果，组成数组返回
	some():给每一项都绑定函数，只要有一个项是true，就返回true

*/